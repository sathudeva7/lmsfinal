{"version":3,"sources":["actions/Types.js","reducers/lessonReducer.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","actions/errorActions.js","actions/authActions.js","components/auth/RegisterModel.js","components/auth/Logout.js","components/auth/LoginModel.js","actions/lessonActions.js","components/CreateLesson.js","components/AppNavbar.js","components/CourseDetail.js","assets/a11.png","components/LessonList.js","assets/b1.jpg","assets/d.jpg","assets/e.jpg","components/editableComponents/Cardedit.js","components/UserModel.js","components/StartPage.js","App.js","reportWebVitals.js","index.js"],"names":["GET_LESSONS","ADD_LESSON","LESSONS_LOADING","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","GET_ERRORS","CLEAR_ERRORS","initialState","lessons","loading","token","localStorage","getItem","isAuthenticated","isLoading","user","msg","status","id","combineReducers","lesson","state","action","type","payload","auth","setItem","removeItem","error","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","returnErrors","clearErrors","tokenConfig","getState","config","headers","RegisterModel","modal","firstname","lastname","grade","email","gender","schoolName","password","roles","toggle","props","setState","onChange","e","target","name","value","onSubmit","preventDefault","newUser","register","prevProps","this","NavLink","onClick","href","style","fontSize","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","Button","marginTop","block","Component","connect","dispatch","body","JSON","stringify","axios","post","then","res","data","catch","err","response","Logout","logout","LoginModel","login","setLessonsLoading","CreateLesson","newLesson","createLesson","AppNavbar","authLinks","NavItem","className","guestLinks","Navbar","dark","expand","Container","NavbarBrand","fontFamily","NavbarToggler","Collapse","navbar","Nav","CourseDetail","length","user_detail","map","userdetail","studentid","isVerified","List","Card","CardBody","CardTitle","CardText","renderUser","students","renderCourse","course","LessonList","selectedCourse","getLessons","width","CardImg","src","a11","alt","tag","CardSubtitle","to","_id","onCourseSelect","get","Cardedit","authnot","CardDeck","padding","d","UserModel","onSelect","selected","Toggle","defaultSelected","eventKey","useStyles","makeStyles","theme","root","minHeight","backgroundImage","c","backgroundRepeat","StartPage","classes","CssBaseline","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3537eec1.chunk.js","sourcesContent":["export const GET_LESSONS = 'GET_LESSONS';\r\nexport const ADD_LESSON = 'ADD_LESSON';\r\nexport const DELETE_LESSON = 'DELETE_LESSON';\r\nexport const LESSONS_LOADING = 'LESSONS_LOADING';\r\nexport const LESSON_FAIL='LESSON_FAIL';\r\n\r\nexport const USER_LOADING='USER_LOADING';\r\nexport const USER_LOADED='USER_LOADED';\r\nexport const AUTH_ERROR='AUTH_ERROR';\r\nexport const LOGIN_SUCCESS='LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL='LOGIN_FAIL';\r\nexport const LOGOUT_SUCCESS='LOGOUT_SUCCESS';\r\nexport const REGISTER_SUCCESS='REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL='REGISTER_FAIL';\r\nexport const GET_ERRORS='GET_ERRORS';\r\nexport const CLEAR_ERRORS='CLEAR_ERRORS';","import uuid from 'uuid';\r\nimport {GET_LESSONS,ADD_LESSON,DELETE_LESSON,LESSONS_LOADING } from '../actions/Types';\r\nconst initialState = {\r\n  lessons:[],\r\n  loading:false\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n        case GET_LESSONS:\r\n            return {\r\n                ...state,\r\n                lessons:action.payload,\r\n                loading:false\r\n            };\r\n        case LESSONS_LOADING:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case ADD_LESSON:\r\n                return{\r\n                    ...state,\r\n                    lessons:action.payload,\r\n                    loading:false   \r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {USER_LOADED,USER_LOADING,AUTH_ERROR,LOGIN_FAIL,LOGIN_SUCCESS,LOGOUT_SUCCESS,REGISTER_FAIL,REGISTER_SUCCESS} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated:null,\r\n    isLoading: false,\r\n    user:null\r\n};\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading:true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                isLoading:false,\r\n                user:action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token',action.payload.token)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated:true,\r\n                isLoading:false\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                user:null,\r\n                isAuthenticated:false,\r\n                isLoading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_ERRORS,CLEAR_ERRORS} from '../actions/Types'\r\n\r\nconst initialState = {\r\n    msg:{},\r\n    status:null,\r\n    id:null\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return {\r\n                msg:action.payload.msg,\r\n                status:action.payload.status,\r\n                id:action.payload.id\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg:{},\r\n                status:null,\r\n                id:null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport lessonReducer from './lessonReducer';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\n\r\nexport default combineReducers({\r\n    lesson:lessonReducer,\r\n    auth:authReducer,\r\n    error:errorReducer\r\n})","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer,initialState, compose(\r\n    applyMiddleware(...middleware),\r\n  \r\n));\r\n\r\nexport default store;","import {GET_ERRORS,CLEAR_ERRORS} from '../actions/Types';\r\n\r\nexport const returnErrors = (msg,status,id = null) => {\r\n    return {\r\n        type:GET_ERRORS,\r\n        payload:{msg,status,id}\r\n    }\r\n}\r\n\r\nexport const clearErrors = () => {\r\n    return{\r\n        type:CLEAR_ERRORS\r\n    }\r\n}","import {USER_LOADED,USER_LOADING,AUTH_ERROR,LOGIN_FAIL,LOGIN_SUCCESS,LOGOUT_SUCCESS,REGISTER_FAIL,REGISTER_SUCCESS} from '../actions/Types';\r\nimport axios from 'axios';\r\nimport {returnErrors} from './errorActions'\r\n\r\n//check token and load user\r\nexport const loadUser = () => (dispatch,getState) => {\r\n    //user loading\r\n    dispatch({type: USER_LOADING});\r\n    \r\n    axios.get('http://localhost:5000/user/user',tokenConfig(getState))\r\n    .then(res => dispatch({\r\n        type:USER_LOADED,\r\n        payload:res.data\r\n    }))\r\n    .catch(err=> {\r\n        dispatch(returnErrors(err.response.msg,err.response.status))\r\n        \r\n        dispatch({type:AUTH_ERROR});\r\n    });\r\n};\r\n\r\n//register\r\nexport const register = ({firstname,lastname,grade,email,password,gender,schoolName,roles}) =>dispatch => {\r\n    //headers\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n    //request body\r\n    const body = JSON.stringify({firstname,lastname,grade,email,password,gender,schoolName,roles})\r\n\r\n    axios.post('http://localhost:5000/user/register',body,config)\r\n    .then(res => dispatch({\r\n        type:REGISTER_SUCCESS,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => {\r\n        dispatch(returnErrors(err.response.data,err.response.status,'REGISTER_FAIL'))\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        });\r\n    })\r\n}\r\n\r\n\r\n//login\r\nexport const login = ({email,password}) =>dispatch => {\r\n    //headers\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n    //request body\r\n    const body = JSON.stringify({email,password})\r\n\r\n    axios.post('http://localhost:5000/user/login',body,config)\r\n    .then(res => dispatch({\r\n        type:LOGIN_SUCCESS,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => {\r\n        dispatch(returnErrors(err.response.data,err.response.status,'LOGIN_FAIL'))\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        });\r\n    })\r\n   \r\n\r\n}\r\n\r\n\r\n//logout\r\nexport const logout = () => {\r\n    return{\r\n        type:LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const tokenConfig = getState => {\r\n    //get token from local storage\r\n    const token = getState().auth.token;\r\n\r\n    //headers\r\n    const config = {\r\n        headers:{\r\n            \"Content-type\":\"application/json\"\r\n        }\r\n    }\r\n\r\n    //if token, add to header\r\n    if(token){\r\n        config.headers['x-auth-token'] = token;\r\n    }\r\n\r\n    return config;\r\n}","import React, {Component} from 'react';\r\nimport {Button,NavLink,Alert,Modal,ModalBody,Form,FormGroup,ModalHeader,Label,Input} from 'reactstrap'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {register} from '../../actions/authActions'\r\nimport {clearErrors} from '../../actions/errorActions'\r\nclass RegisterModel extends Component {\r\n    state = {\r\n        modal: false,\r\n        firstname:'',\r\n        lastname:'',\r\n        grade:'',\r\n        email:'',\r\n        gender:'',\r\n        schoolName:'',\r\n        password:'',\r\n        roles:'student',\r\n        msg:null\r\n        }\r\n\r\n    static propTypes = {\r\n        isAuthenticated:PropTypes.bool,\r\n        error:PropTypes.object.isRequired,\r\n        register:PropTypes.func.isRequired,\r\n        clearErrors:PropTypes.func.isRequired\r\n    };\r\n\r\n    componentDidUpdate(prevProps){\r\n        const {error,isAuthenticated} = this.props;\r\n        if(error !== prevProps.error){\r\n            //check for register error\r\n            if(error.id === 'REGISTER_FAIL'){\r\n                this.setState({msg:error.msg.msg})\r\n            }else{\r\n                this.setState({msg:null})\r\n            }\r\n        }\r\n        //if authenticated close modal\r\n        if(this.state.modal){\r\n            if(isAuthenticated){\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.clearErrors();\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        })\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]:e.target.value})\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const {firstname,lastname,grade,email,password,gender,schoolName,roles} = this.state\r\n        //create user obj\r\n        const newUser = {\r\n            firstname,lastname,grade,email,password,gender,schoolName,roles\r\n        };\r\n        //attempt to register\r\n        this.props.register(newUser)\r\n        \r\n        \r\n      //  this.toggle()\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n               <NavLink onClick={this.toggle} href=\"#\" style={{fontSize:'1rem'}}>\r\n                   Register\r\n               </NavLink>\r\n            <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                <ModalHeader toggle={this.toggle}>Register</ModalHeader>\r\n                <ModalBody>\r\n                    {this.state.msg ? <Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"firstname\">First Name</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"firstname\"\r\n                                id=\"firstname\"\r\n                                placeholder=\"First Name\"\r\n                                onChange={this.onChange}\r\n                                />\r\n                            <Label for=\"lastname\">Last Name</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"lastname\"\r\n                                id=\"lastname\"\r\n                                placeholder=\"Last Name\"\r\n                                onChange={this.onChange}\r\n                                />\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.onChange}\r\n                                />\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={this.onChange}\r\n                                />\r\n                            <Label for=\"grade\">Grade</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"grade\"\r\n                                id=\"grade\"\r\n                                placeholder=\"Grade\"\r\n                                onChange={this.onChange}\r\n                                />\r\n                            <Label for=\"gender\">Gender</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"gender\"\r\n                                id=\"gender\"\r\n                                placeholder=\"Gender\"\r\n                                onChange={this.onChange}\r\n                                />\r\n                            <Label for=\"schoolName\">School Name</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"schoolName\"\r\n                                id=\"schoolName\"\r\n                                placeholder=\"School Name\"\r\n                                onChange={this.onChange}\r\n                                />\r\n                            <Label for=\"roles\">Roles</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"roles\"\r\n                                id=\"roles\"\r\n                                placeholder=\"Roles\"\r\n                                onChange={this.onChange}\r\n                                />\r\n                            <Button color='dark' \r\n                                style={{marginTop:'2rem'}}\r\n                                block>\r\n                                    Register\r\n                                </Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated:state.auth.isAuthenticated  ,\r\n  error:state.error\r\n})\r\n\r\nexport default connect(mapStateToProps,{register,clearErrors})(RegisterModel);\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport { NavLink } from 'reactstrap';\r\nimport {logout} from '../../actions/authActions'\r\nimport PropTypes from 'prop-types';\r\nexport class Logout extends Component {\r\n  static propTypes = {\r\n      logout:PropTypes.func.isRequired\r\n  }\r\n  \r\n  \r\n    render() {\r\n    return (\r\n      <>\r\n      <NavLink onClick={this.props.logout} href=\"#\" style={{fontSize:'1rem'}}>\r\n          Logout\r\n      </NavLink>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null,{logout})(Logout);\r\n","import React, {Component} from 'react';\r\nimport {Button,NavLink,Alert,Modal,ModalBody,Form,FormGroup,ModalHeader,Label,Input} from 'reactstrap'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {login} from '../../actions/authActions'\r\nimport {clearErrors} from '../../actions/errorActions'\r\n\r\nclass LoginModel extends Component {\r\n    state = {\r\n        modal: false,\r\n        email:'',\r\n        password:'',\r\n        msg:null\r\n        }\r\n\r\n    static propTypes = {\r\n        isAuthenticated:PropTypes.bool,\r\n        error:PropTypes.object.isRequired,\r\n        login:PropTypes.func.isRequired,\r\n        clearErrors:PropTypes.func.isRequired\r\n    };\r\n\r\n   \r\n\r\n    componentDidUpdate(prevProps){\r\n        const {error,isAuthenticated} = this.props;\r\n        if(error !== prevProps.error){\r\n            //check for login error\r\n            if(error.id === 'LOGIN_FAIL'){\r\n                this.setState({msg:error.msg.msg})\r\n            }else{\r\n                this.setState({msg:null})\r\n            }\r\n        }\r\n        //if authenticated close modal\r\n        if(this.state.modal){\r\n            if(isAuthenticated){\r\n                this.toggle();\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.clearErrors();\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        })\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]:e.target.value})\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const {email,password} = this.state\r\n        //create user obj\r\n        const user = {\r\n            email,password\r\n        };\r\n        //attempt to register\r\n        this.props.login(user)\r\n        \r\n      //  this.toggle()\r\n    \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n               <NavLink onClick={this.toggle} href=\"#\" style={{fontSize:'1rem'}}>\r\n                   Login\r\n               </NavLink>\r\n            <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                <ModalHeader toggle={this.toggle}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    {this.state.msg ? <Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <FormGroup>\r\n                         \r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.onChange}\r\n                                />\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={this.onChange}\r\n                                />\r\n                           \r\n                           \r\n                            <Button color='dark' \r\n                                style={{marginTop:'2rem'}}\r\n                                block>Login\r\n                                </Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated:state.auth.isAuthenticated  ,\r\n  error:state.error\r\n})\r\n\r\nexport default connect(mapStateToProps,{login,clearErrors})(LoginModel);\r\n","import {GET_LESSONS,ADD_LESSON,LESSON_FAIL,DELETE_LESSON,LESSONS_LOADING } from '../actions/Types';\r\nimport axios from 'axios';\r\nimport {tokenConfig} from './authActions'\r\nimport {returnErrors} from './errorActions'\r\nexport const getLessons = () => (dispatch,getState) => {\r\n    dispatch(setLessonsLoading());\r\n    axios.get('http://localhost:5000/lessons/lesson',tokenConfig(getState))\r\n    .then(res => \r\n        dispatch({\r\n            type:GET_LESSONS,\r\n            payload:res.data\r\n        }))\r\n}\r\n\r\nexport const createLesson = ({lesson,grade}) => (dispatch,getState) => {\r\n\r\n    const body = JSON.stringify({lesson,grade})\r\n\r\n    axios.post('http://localhost:5000/lessons/lesson',body,tokenConfig(getState))\r\n    .then(res => dispatch({\r\n        type:ADD_LESSON,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => {\r\n        dispatch(returnErrors(err.response.data,err.response.status,'LESSON_FAIL'))\r\n        dispatch({\r\n            type:LESSON_FAIL\r\n        });\r\n    })\r\n}\r\n\r\nexport const setLessonsLoading = () => {\r\n    return{\r\n        type:LESSONS_LOADING\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Button,NavLink,Alert,Modal,ModalBody,Form,FormGroup,ModalHeader,Label,Input} from 'reactstrap'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {clearErrors} from '../actions/errorActions'\r\nimport {createLesson} from '../actions/lessonActions'\r\nclass CreateLesson extends Component {\r\n    state = {\r\n        modal:false,\r\n        lesson:'',\r\n        grade:'',\r\n        msg:null\r\n    }\r\n\r\n    static propTypes = {\r\n        isAuthenticated:PropTypes.bool,\r\n        error:PropTypes.object.isRequired,\r\n        createLesson:PropTypes.func.isRequired,\r\n        clearErrors:PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        const {error,isAuthenticated} = this.props;\r\n        if(error !== prevProps.error){\r\n            if(error.id === 'LESSON_FAIL'){\r\n                this.setState({msg:error.msg.msg})\r\n            }else{\r\n                this.setState({msg:null})\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.clearErrors();\r\n        this.setState({\r\n            modal:!this.state.modal\r\n        })\r\n        \r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]:e.target.value})\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const {lesson,grade} = this.state\r\n\r\n        const newLesson = {\r\n            lesson,grade\r\n        };\r\n        this.props.createLesson(newLesson)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <NavLink onClick={this.toggle} href='#' style={{fontSize:'1rem'}}>\r\n                    Create Lesson\r\n                </NavLink>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Create Lesson</ModalHeader>\r\n                    <ModalBody>\r\n                        {this.state.msg ? <Alert color=\"danger\">{this.state.msg}</Alert>:null}\r\n                        <Form onSubmit={this.onSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"lesson\">Lesson Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"lesson\"\r\n                                    id=\"lesson\"\r\n                                    placeholder=\"lesson\"\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Label for=\"grade\">Grade</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"grade\"\r\n                                    id=\"grade\"\r\n                                    placeholder=\"grade\"\r\n                                    onChange={this.onChange}\r\n                                />\r\n                                <Button color='dark' \r\n                                style={{marginTop:'2rem'}}\r\n                                block>\r\n                                    Create\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated:state.auth.isAuthenticated,\r\n    error:state.error\r\n})\r\n\r\nexport default connect(mapStateToProps,{createLesson,clearErrors})(CreateLesson);","import React,{Component} from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container\r\n} from 'reactstrap';\r\n\r\nimport RegisterModel from './auth/RegisterModel'\r\nimport Logout from './auth/Logout'\r\nimport LoginModel from './auth/LoginModel'\r\nimport CreateLesson from './CreateLesson'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nclass AppNavbar extends Component {\r\n    state = {\r\n        isOpen:false\r\n    }\r\n\r\n    static propTypes = {\r\n        auth:PropTypes.object.isRequired\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {isAuthenticated,user} = this.props.auth\r\n        const authLinks = (\r\n            <>\r\n            <NavItem>\r\n                <span className=\"navbar-text mr-3\">\r\n                    <strong style={{fontSize:'1rem'}}>{ user ? ` ${user.firstname}`:\"\"}</strong>\r\n                </span>\r\n            </NavItem>\r\n            <NavItem>\r\n                                <Logout />\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <CreateLesson />\r\n                            </NavItem>\r\n            </>\r\n        );\r\n        const guestLinks = (\r\n            <>\r\n            <NavItem>\r\n                                \r\n                                    <RegisterModel />\r\n                                \r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <LoginModel />\r\n                            </NavItem>\r\n            </>\r\n        );\r\n\r\n       return ( <div>\r\n            <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n                <Container>\r\n                    <NavbarBrand href=\"/\" style={{fontFamily:\"Lobster\", fontSize:'3rem'}}>eTution</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                           {isAuthenticated ? authLinks : guestLinks}\r\n                            \r\n                        </Nav>\r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n       )}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(AppNavbar)","import React, { Component } from 'react'\r\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport { List } from 'reactstrap';\r\nexport class CourseDetail extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n    }\r\n\r\n    renderUser(user){\r\n        if(user == null || user.length == 0){\r\n            return (<div></div>)\r\n        } else{\r\n            const user_detail = user.map((userdetail) => {\r\n                return(\r\n                    <li>\r\n                        <p>\r\n                        {userdetail.studentid.firstname}<br></br>\r\n                            {JSON.stringify(userdetail.isVerified)}\r\n                            \r\n                            \r\n                           \r\n                        </p>\r\n                    </li>\r\n                )\r\n            })\r\n            return (\r\n                <div>\r\n                    <h4>Students</h4>\r\n                    <List type=\"unstyled\">\r\n                        {user_detail}\r\n                    </List>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderCourse(lesson){\r\n        if(lesson != null){\r\n            return(\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <Card>\r\n                            <CardBody>\r\n                                <CardTitle>{lesson.lesson}</CardTitle>\r\n                            <CardText>{lesson.grade}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        {this.renderUser(lesson.students)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(<div></div>)\r\n        }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderCourse(this.props.course)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CourseDetail\r\n","export default __webpack_public_path__ + \"static/media/a11.fe386dea.png\";","import React,{Component} from 'react';\r\nimport {Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle,Container,Button} from 'reactstrap';\r\nimport a11 from '../assets/a11.png'\r\nimport {connect} from 'react-redux';\r\nimport {getLessons} from '../actions/lessonActions'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams\r\n  } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport CourseDetail from './CourseDetail' \r\n\r\nclass LessonList extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedCourse: null\r\n        }\r\n    \r\n    }\r\n\r\n    onCourseSelect(lesson){\r\n        this.setState({selectedCourse:lesson});\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n       \r\n        this.props.getLessons();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    renderCourse(lesson){\r\n        if(lesson != null){\r\n            return(\r\n                \r\n              \r\n                <CourseDetail course={lesson} />\r\n             \r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {lessons} = this.props.lesson;\r\n        return(\r\n            <Container>\r\n                <Card style={{width:\"200px\"}}>\r\n                    <CardBody>\r\n                        {lessons.map((lesson) => (\r\n                            <div key={lesson.id}>\r\n                            <CardImg width=\"50px\" src={a11} alt=\"Card image cap\" />\r\n                            <CardTitle tag=\"h5\">{lesson.lesson}</CardTitle>\r\n                            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">grade: {lesson.grade}</CardSubtitle>\r\n                            <Router>\r\n\r\n\r\n                            \r\n                            <Link to={`/lesson/${lesson._id}`}> <Button onClick={() => this.onCourseSelect(lesson)}>View</Button></Link>\r\n                            </Router>\r\n                            </div>\r\n                        ))}\r\n                    </CardBody>\r\n                </Card>\r\n\r\n            <div>\r\n               {this.renderCourse(this.state.selectedCourse)} \r\n            </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nLessonList.propTypes = {\r\n    getLessons:PropTypes.func.isRequired,\r\n    lesson:PropTypes.object.isRequired,\r\n    register:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lesson:state.lesson\r\n})\r\n\r\nexport default connect(mapStateToProps, {getLessons})(LessonList);","export default __webpack_public_path__ + \"static/media/b1.6726857e.jpg\";","export default __webpack_public_path__ + \"static/media/d.b9d2f089.jpg\";","export default __webpack_public_path__ + \"static/media/e.f8640e34.jpg\";","import React, { Component } from 'react'\r\nimport {Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle,Container, CardDeck,Jumbotron} from 'reactstrap';\r\nimport a11 from '../../assets/a11.png'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport d from '../../assets/d.jpg'\r\nimport e from '../../assets/e.jpg'\r\n\r\n\r\n\r\n\r\nexport class Cardedit extends Component {\r\n  static propTypes = {\r\n    auth:PropTypes.object.isRequired\r\n}\r\n\r\n  \r\n  render() {\r\n    const {isAuthenticated,user} = this.props.auth\r\n    const authnot = (\r\n        <>\r\n         <CardDeck style={{padding:'10px'}} >\r\n        <Card style={{width:\"250px\"}} > \r\n        <CardImg width=\"50px\"  src={a11} alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Can Submit Assignments</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Card subtitle</CardSubtitle>\r\n          <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n        \r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card style={{width:\"250px\"}} > \r\n        <CardImg width=\"50px\"  src={d} alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Can Teach</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Card subtitle</CardSubtitle>\r\n          <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n        \r\n        </CardBody>\r\n      </Card>\r\n      <Card style={{width:\"250px\"}} > \r\n        <CardImg width=\"50px\"  src={e} alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Can Study</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Card subtitle</CardSubtitle>\r\n          <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n        \r\n        </CardBody>\r\n      </Card>\r\n      </CardDeck>\r\n        </>\r\n    )\r\n    return (\r\n      \r\n      <div>\r\n        {isAuthenticated ? \"\" : authnot}\r\n\r\n       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(Cardedit)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle,Container} from 'reactstrap';\r\n    import SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\n\r\n// Be sure to include styles at some point, probably during your bootstraping\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport PropTypes from 'prop-types';\r\nimport LessonList from '../components/LessonList'\r\nimport { Route ,Link} from 'react-router-dom';\r\nexport class UserModel extends Component {\r\n    static propTypes = {\r\n        auth:PropTypes.object.isRequired\r\n    }\r\n  render() {\r\n    const {isAuthenticated,user} = this.props.auth\r\n    return (\r\n      <div>\r\n          {isAuthenticated ? \r\n        <Container>\r\n                \r\n            <LessonList />\r\n            <SideNav\r\n    onSelect={(selected) => {\r\n        // Add your code here\r\n    }}\r\n>\r\n    <SideNav.Toggle />\r\n    <SideNav.Nav defaultSelected=\"home\">\r\n        <NavItem eventKey=\"home\">\r\n            <NavIcon>\r\n                <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n                       {user.firstname} \r\n                       {user.lastname}\r\n              \r\n            </NavText>\r\n        </NavItem>\r\n        <NavItem>\r\n            <Route>\r\n            <Link to=\"/lessonlist\">Lesson</Link>\r\n            </Route>\r\n        </NavItem>\r\n        \r\n    </SideNav.Nav>\r\n</SideNav>\r\n            </Container>\r\n            \r\n\r\n  :\"\"}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(UserModel)\r\n","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport c from '../assets/b1.jpg'\r\nimport Cardedit from './editableComponents/Cardedit'\r\nimport AppNavbar from '../components/AppNavbar'\r\nimport UserModel from '../components/UserModel'\r\nimport { CssBaseline } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        minHeight:'100vh',\r\n        backgroundImage:`url(${c})`,\r\n        backgroundRepeat:\"no-repeat\",\r\n              \r\n    },\r\n   \r\n}))\r\n\r\nfunction StartPage() {\r\nconst classes = useStyles();\r\n    \r\n  return (\r\n      <>\r\n     \r\n    <div className={classes.root}>\r\n        \r\n      \r\n  <Cardedit />\r\n     \r\n      <CssBaseline />\r\n      \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StartPage\r\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {loadUser} from './actions/authActions'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport AppNavbar from './components/AppNavbar'\nimport CourseDetail from './components/CourseDetail'\nimport LessonList from './components/LessonList'\nimport StartPage from './components/StartPage'\nimport UserModel from './components/UserModel'\nimport {Switch,Route,Redirect,BrowserRouter} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  componentDidMount(){\n    store.dispatch(loadUser())\n  }\n\n  static propTypes = {\n    auth:PropTypes.object.isRequired\n}\n\n render(){\n  const {isAuthenticated,user} = this.props.auth\n\n \n\n\n  return (\n <BrowserRouter>  \n    <div className=\"App\">\n      <AppNavbar />\n      \n      {!isAuthenticated ? \n      <StartPage /> : \n      <Switch>\n        \n      <Route path=\"/\" component={UserModel}/>\n     \n    </Switch>\n      }\n   \n \n    </div>\n   </BrowserRouter>\n\n  );\n}\n}\n\nconst mapStateToProps = state => ({\n  auth:state.auth\n})\n\nexport default  connect(mapStateToProps,null)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store';\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}